{"ast":null,"code":"import _objectSpread from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/Drum/Drum.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./style.css\";\n\nfunction useKeyPress(keyInfo) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyPressed = _useState2[0],\n      setKeyPressed = _useState2[1];\n\n  function downHandler(_ref) {\n    var key = _ref.key;\n    console.log(key, keyInfo.letter);\n\n    if (key === keyInfo.letter.toLowerCase()) {\n      setKeyPressed(false);\n      setTimeout(function () {\n        return setKeyPressed(true);\n      }, 10);\n      keyInfo.audio.current.play();\n      keyInfo.audio.current.currentTime = 0;\n      keyInfo.handleDisplay(keyInfo.id);\n    }\n  }\n\n  useEffect(function () {\n    window.addEventListener('keydown', downHandler);\n    return function () {\n      window.removeEventListener('keydown', downHandler);\n    };\n  }, []);\n  return [keyPressed, setKeyPressed];\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // 'use strict';\n  var buffer = [];\n  var lastKeyTime = Date.now();\n  document.addEventListener('keydown', function (event) {\n    var charList = 'qweasdzxc';\n    var key = event.key.toLowerCase(); // we are only interested in alphanumeric keys\n\n    if (charList.indexOf(key) === -1) return;\n    var currentTime = Date.now();\n\n    if (currentTime - lastKeyTime > 5000) {\n      buffer = [];\n    }\n\n    buffer.push(key);\n    lastKeyTime = currentTime;\n    console.log(buffer);\n  }); // document.addEventListener(\"clearBtn\", event => {\n  //     event.preventDefault()\n  //     buffer=[]\n  //     console.log(\"clearBtn\");\n  // })\n});\n\nfunction DrumMachine(props) {\n  var audioRef = useRef();\n\n  var _useKeyPress = useKeyPress(_objectSpread({}, props, {\n    audio: audioRef\n  })),\n      _useKeyPress2 = _slicedToArray(_useKeyPress, 2),\n      keyPressed = _useKeyPress2[0],\n      setKeyPressed = _useKeyPress2[1];\n\n  var handleClick = function handleClick() {\n    setKeyPressed(false);\n    setTimeout(function () {\n      return setKeyPressed(true);\n    }, 10);\n    audioRef.current.play();\n    audioRef.current.currentTime = 0;\n    props.handleDisplay(props.id);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"drum-machine\" + (keyPressed ? \" drum-animation\" : \"\"),\n    id: props.id,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.letter), React.createElement(\"audio\", {\n    ref: audioRef,\n    className: \"clip\",\n    src: props.src,\n    id: props.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n}\n\n;\nexport default DrumMachine;","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/Drum/Drum.js"],"names":["React","useEffect","useState","useRef","useKeyPress","keyInfo","keyPressed","setKeyPressed","downHandler","key","console","log","letter","toLowerCase","setTimeout","audio","current","play","currentTime","handleDisplay","id","window","addEventListener","removeEventListener","document","buffer","lastKeyTime","Date","now","event","charList","indexOf","push","DrumMachine","props","audioRef","handleClick","src"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./style.css\";\n\n\n\nfunction useKeyPress(keyInfo){\n    const [keyPressed, setKeyPressed ] = useState (false)\n    \n    function downHandler({ key }) {\n        console.log(key, keyInfo.letter);\n        if (key === keyInfo.letter.toLowerCase()) {\n            setKeyPressed(false);\n            setTimeout(() => setKeyPressed(true), 10);\n          keyInfo.audio.current.play()\n          keyInfo.audio.current.currentTime = 0\n          keyInfo.handleDisplay(keyInfo.id)\n        }\n      }\n    \n      useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        return () => {\n          window.removeEventListener('keydown', downHandler);\n        };\n      }, []);\n      return [keyPressed, setKeyPressed];\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // 'use strict';\n\n    let buffer = [];\n    let lastKeyTime = Date.now();\n\n    document.addEventListener('keydown', event => {\n        const charList = 'qweasdzxc';\n        const key = event.key.toLowerCase();\n\n        // we are only interested in alphanumeric keys\n        if (charList.indexOf(key) === -1) return;\n\n        const currentTime = Date.now();\n\n        if (currentTime - lastKeyTime > 5000) {\n            buffer = [];\n        }\n\n        buffer.push(key);\n        lastKeyTime = currentTime;\n\n        console.log(buffer);\n    });\n    // document.addEventListener(\"clearBtn\", event => {\n    //     event.preventDefault()\n    //     buffer=[]\n    //     console.log(\"clearBtn\");\n    // })\n});\n\n\n\nfunction DrumMachine (props) {\n    const audioRef = useRef();\n    const [keyPressed, setKeyPressed] = useKeyPress({\n        ...props,\n        audio: audioRef\n    })\n    const handleClick = () => {\n        setKeyPressed(false);\n        setTimeout(() => setKeyPressed(true), 10);\n        audioRef.current.play()\n        audioRef.current.currentTime = 0\n        props.handleDisplay(props.id)\n    }\n\n        return (\n            <div className={\"drum-machine\" + (keyPressed ? \" drum-animation\" : \"\")}\n                id={props.id}\n                onClick={handleClick}\n            >\n                <h4>{props.letter}</h4>\n                <audio\n                    ref={audioRef}\n                    className=\"clip\"\n                    src={props.src}\n                    id={props.letter}>\n                </audio>\n            </div>\n        )\n};\n\nexport default DrumMachine;\n\n"]},"metadata":{},"sourceType":"module"}