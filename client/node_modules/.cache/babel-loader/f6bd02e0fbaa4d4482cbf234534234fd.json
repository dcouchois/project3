{"ast":null,"code":"import _toConsumableArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/DrumCall/DrumCall.js\";\nimport React, { useState, useRef } from \"react\";\nimport DrumMachine from \"../Drum/Drum\";\nimport \"./style.css\";\nimport API from \"../../utils/Stores/Beat/BeatsAPI\";\nexport function DrumCall(props) {\n  var _this = this;\n\n  var data = [{\n    id: \"Conga Drum\",\n    letter: \"Q\",\n    src: \"http://s1download-universal-soundbank.com/wav/13882.wav\",\n    audioRef: useRef()\n  }, {\n    id: \"Drum Rimshot\",\n    letter: \"W\",\n    src: \"http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/RIMSHOT1.WAV\",\n    audioRef: useRef()\n  }, {\n    id: \"Bass Drum\",\n    letter: \"E\",\n    src: \"http://www.denhaku.com/r_box/sr16/sr16bd/brt hall.wav\",\n    audioRef: useRef()\n  }, {\n    id: \"High Hat\",\n    letter: \"A\",\n    src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Long%20Open%20Hi%20Hat%20002-1653-Free-Loops.com.mp3\",\n    audioRef: useRef()\n  }, {\n    id: \"Snare\",\n    letter: \"S\",\n    src: \"http://cd.textfiles.com/10000soundssongs/WAV/RVBSNARR.WAV\",\n    audioRef: useRef()\n  }, {\n    id: \"Synth\",\n    letter: \"D\",\n    src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/Drop%20Off%20Bass%20Dist-87-Free-Loops.com.mp3\",\n    audioRef: useRef()\n  }, {\n    id: \"Airhorn\",\n    letter: \"Z\",\n    src: \"http://www.able2products.com/sounds/horn.mp3\",\n    audioRef: useRef()\n  }, {\n    id: \"Drum Solo\",\n    letter: \"X\",\n    src: \"http://www.maggiereid.com/flash/files/sound/Wave%20Files/RIMSHOT.WAV\",\n    audioRef: useRef()\n  }, {\n    id: \"Latin Drums\",\n    letter: \"C\",\n    src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Latin%20Percussions-5244-Free-Loops.com.mp3\",\n    audioRef: useRef()\n  }]; // hooks:\n  // constructor(props) {\n  //     super(props)\n  //     this.scheduledEvents = [];\n  // this.drum = {\n  //     display: '',\n  //     recording: {\n  //         mode: 'RECORDING',\n  //         events: [],\n  //         currentTime: 0,\n  //         currentEvents: [],\n  //     },\n  //     lettersPressed: []\n  // }\n  // }\n\n  var scheduledEvents = [];\n\n  var _useState = useState({\n    display: '',\n    recording: {\n      mode: 'RECORDING',\n      events: [],\n      currentTime: 0,\n      currentEvents: []\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      drum = _useState2[0],\n      setDrumState = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lettersPressed = _useState4[0],\n      setLettersPressed = _useState4[1];\n\n  var _playSound = function playSound(keyInfo) {\n    keyInfo.audioRef.current.play();\n    keyInfo.audioRef.current.currentTime = 0;\n    handleDisplay(keyInfo.id);\n  };\n\n  var setRecording = function setRecording(value) {\n    setDrumState(_objectSpread({}, drum, {\n      recording: Object.assign({}, drum.recording, value)\n    }));\n  };\n\n  var addLetter = function addLetter(letter) {\n    console.log(\"previous drum: \", lettersPressed);\n    var newLettersPressed = [].concat(_toConsumableArray(lettersPressed), [letter]);\n    console.log(\"new drum: \", newLettersPressed);\n    setLettersPressed(newLettersPressed);\n  };\n\n  var getRecordingTime = function getRecordingTime() {\n    if (drum.recording.events.length === 0) {\n      return 0;\n    }\n\n    return Math.max.apply(Math, _toConsumableArray(drum.recording.events.map(function (event) {\n      return event.time + event.duration;\n    })));\n  };\n\n  var onClickPlay = function onClickPlay() {\n    setRecording({\n      mode: 'PLAYING'\n    });\n    lettersPressed.forEach(function (keyInfo, index) {\n      scheduledEvents.push(setTimeout(function () {\n        keyInfo.playSound();\n      }, index * 300));\n    });\n  };\n\n  var onClickStop = function onClickStop() {\n    scheduledEvents.forEach(function (scheduledEvent) {\n      clearTimeout(scheduledEvent);\n    });\n\n    _this.setRecording({\n      mode: 'RECORDING',\n      currentEvents: []\n    });\n  };\n\n  var clearBtn = function clearBtn() {// document.removeEventListener('keydown')\n  };\n\n  var saveBtn = function saveBtn(keyInfo) {\n    API.createBeats;\n  };\n\n  var handleDisplay = function handleDisplay(display) {\n    return setDrumState(_objectSpread({}, drum, {\n      display: display\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    id: \"drum-machine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"drum-roll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, data.map(function (d) {\n    return React.createElement(DrumMachine, {\n      addLetter: addLetter,\n      recording: drum.recording,\n      setRecording: setRecording,\n      audioRef: d.audioRef,\n      playSound: function playSound() {\n        return _playSound(d);\n      },\n      key: d.id,\n      id: d.id,\n      letter: d.letter,\n      src: d.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    id: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, drum.display), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"beatTitle\",\n    placeholder: \"Ice Cold Beat Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"beatSeq\",\n    placeholder: \"Ice Cold Beat Sequence\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info\",\n    onClick: saveBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: clearBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success\",\n    onClick: onClickPlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Play\")));\n}\nexport default DrumCall;","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/DrumCall/DrumCall.js"],"names":["React","useState","useRef","DrumMachine","API","DrumCall","props","data","id","letter","src","audioRef","scheduledEvents","display","recording","mode","events","currentTime","currentEvents","drum","setDrumState","lettersPressed","setLettersPressed","playSound","keyInfo","current","play","handleDisplay","setRecording","value","Object","assign","addLetter","console","log","newLettersPressed","getRecordingTime","length","Math","max","map","event","time","duration","onClickPlay","forEach","index","push","setTimeout","onClickStop","scheduledEvent","clearTimeout","clearBtn","saveBtn","createBeats","d"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kCAAhB;AAMA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC5B,MAAMC,IAAI,GAAG,CACT;AAAEC,IAAAA,EAAE,EAAE,YAAN;AAAoBC,IAAAA,MAAM,EAAE,GAA5B;AAAiCC,IAAAA,GAAG,EAAE,yDAAtC;AAAiGC,IAAAA,QAAQ,EAAET,MAAM;AAAjH,GADS,EAET;AAAEM,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,MAAM,EAAE,GAA9B;AAAmCC,IAAAA,GAAG,EAAE,+EAAxC;AAAyHC,IAAAA,QAAQ,EAAET,MAAM;AAAzI,GAFS,EAGT;AAAEM,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,MAAM,EAAE,GAA3B;AAAgCC,IAAAA,GAAG,EAAE,uDAArC;AAA8FC,IAAAA,QAAQ,EAAET,MAAM;AAA9G,GAHS,EAIT;AAAEM,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,MAAM,EAAE,GAA1B;AAA+BC,IAAAA,GAAG,EAAE,4GAApC;AAAkJC,IAAAA,QAAQ,EAAET,MAAM;AAAlK,GAJS,EAKT;AAAEM,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,MAAM,EAAE,GAAvB;AAA4BC,IAAAA,GAAG,EAAE,2DAAjC;AAA8FC,IAAAA,QAAQ,EAAET,MAAM;AAA9G,GALS,EAMT;AAAEM,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,MAAM,EAAE,GAAvB;AAA4BC,IAAAA,GAAG,EAAE,sGAAjC;AAAyIC,IAAAA,QAAQ,EAAET,MAAM;AAAzJ,GANS,EAOT;AAAEM,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,MAAM,EAAE,GAAzB;AAA8BC,IAAAA,GAAG,EAAE,8CAAnC;AAAmFC,IAAAA,QAAQ,EAAET,MAAM;AAAnG,GAPS,EAQT;AAAEM,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,MAAM,EAAE,GAA3B;AAAgCC,IAAAA,GAAG,EAAE,sEAArC;AAA6GC,IAAAA,QAAQ,EAAET,MAAM;AAA7H,GARS,EAST;AAAEM,IAAAA,EAAE,EAAE,aAAN;AAAqBC,IAAAA,MAAM,EAAE,GAA7B;AAAkCC,IAAAA,GAAG,EAAE,mGAAvC;AAA4IC,IAAAA,QAAQ,EAAET,MAAM;AAA5J,GATS,CAAb,CAD4B,CAY5B;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;AAEA,MAAIU,eAAe,GAAG,EAAtB;;AA5B4B,kBA6BCX,QAAQ,CAAC;AAClCY,IAAAA,OAAO,EAAE,EADyB;AAElCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPC,MAAAA,WAAW,EAAE,CAHN;AAIPC,MAAAA,aAAa,EAAE;AAJR;AAFuB,GAAD,CA7BT;AAAA;AAAA,MA6BrBC,IA7BqB;AAAA,MA6BfC,YA7Be;;AAAA,mBAsCgBnB,QAAQ,CAAC,EAAD,CAtCxB;AAAA;AAAA,MAsCrBoB,cAtCqB;AAAA,MAsCLC,iBAtCK;;AAwC5B,MAAMC,UAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI;AACzBA,IAAAA,OAAO,CAACb,QAAR,CAAiBc,OAAjB,CAAyBC,IAAzB;AACAF,IAAAA,OAAO,CAACb,QAAR,CAAiBc,OAAjB,CAAyBR,WAAzB,GAAuC,CAAvC;AACAU,IAAAA,aAAa,CAACH,OAAO,CAAChB,EAAT,CAAb;AACH,GAJD;;AAOA,MAAMoB,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1BT,IAAAA,YAAY,mBACLD,IADK;AAERL,MAAAA,SAAS,EAAEgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,IAAI,CAACL,SAAvB,EAAkCe,KAAlC;AAFH,OAAZ;AAIH,GALD;;AAOA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAvB,MAAM,EAAI;AACxBwB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bb,cAA/B;AACA,QAAMc,iBAAiB,gCAAOd,cAAP,IAAuBZ,MAAvB,EAAvB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,iBAA1B;AACAb,IAAAA,iBAAiB,CAACa,iBAAD,CAAjB;AACH,GALD;;AAOA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,QAAIjB,IAAI,CAACL,SAAL,CAAeE,MAAf,CAAsBqB,MAAtB,KAAiC,CAArC,EAAwC;AACpC,aAAO,CAAP;AACH;;AACD,WAAOC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBACJnB,IAAI,CAACL,SAAL,CAAeE,MAAf,CAAsBwB,GAAtB,CAA0B,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACE,QAAvB;AAAA,KAA/B,CADI,EAAX;AAGH,GAPD;;AASA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBhB,IAAAA,YAAY,CAAC;AACTb,MAAAA,IAAI,EAAE;AADG,KAAD,CAAZ;AAGAM,IAAAA,cAAc,CAACwB,OAAf,CAAuB,UAACrB,OAAD,EAAUsB,KAAV,EAAoB;AACvClC,MAAAA,eAAe,CAACmC,IAAhB,CACIC,UAAU,CAAC,YAAM;AACbxB,QAAAA,OAAO,CAACD,SAAR;AACH,OAFS,EAEPuB,KAAK,GAAG,GAFD,CADd;AAKH,KAND;AAOH,GAXD;;AAaA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBrC,IAAAA,eAAe,CAACiC,OAAhB,CAAwB,UAAAK,cAAc,EAAI;AACtCC,MAAAA,YAAY,CAACD,cAAD,CAAZ;AACH,KAFD;;AAGA,IAAA,KAAI,CAACtB,YAAL,CAAkB;AACdb,MAAAA,IAAI,EAAE,WADQ;AAEdG,MAAAA,aAAa,EAAE;AAFD,KAAlB;AAIH,GARD;;AAUA,MAAMkC,QAAQ,GAAG,SAAXA,QAAW,GAAM,CACnB;AACH,GAFD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAC7B,OAAD,EAAa;AACzBpB,IAAAA,GAAG,CAACkD,WAAJ;AACH,GAFD;;AAIA,MAAM3B,aAAa,GAAG,SAAhBA,aAAgB,CAAAd,OAAO;AAAA,WAAIO,YAAY,mBAAMD,IAAN;AAAYN,MAAAA,OAAO,EAAPA;AAAZ,OAAhB;AAAA,GAA7B;;AAEA,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,CAACiC,GAAL,CAAS,UAAAe,CAAC;AAAA,WACP,oBAAC,WAAD;AACI,MAAA,SAAS,EAAEvB,SADf;AAEI,MAAA,SAAS,EAAEb,IAAI,CAACL,SAFpB;AAGI,MAAA,YAAY,EAAEc,YAHlB;AAII,MAAA,QAAQ,EAAE2B,CAAC,CAAC5C,QAJhB;AAKI,MAAA,SAAS,EAAE;AAAA,eAAMY,UAAS,CAACgC,CAAD,CAAf;AAAA,OALf;AAMI,MAAA,GAAG,EAAEA,CAAC,CAAC/C,EANX;AAOI,MAAA,EAAE,EAAE+C,CAAC,CAAC/C,EAPV;AAQI,MAAA,MAAM,EAAE+C,CAAC,CAAC9C,MARd;AASI,MAAA,GAAG,EAAE8C,CAAC,CAAC7C,GATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAV,CADL,CADJ,EAgBI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBS,IAAI,CAACN,OAAxB,CAhBJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,EAAE,EAAC,WAA/C;AAA2D,IAAA,WAAW,EAAC,oBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,EAAE,EAAC,SAA/C;AAAyD,IAAA,WAAW,EAAC,wBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,OAAO,EAAEwC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAUI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAiD,IAAA,OAAO,EAAED,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,EAWI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAER,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,CAjBJ,CADJ;AAiCH;AAED,eAAevC,QAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport DrumMachine from \"../Drum/Drum\";\nimport \"./style.css\";\nimport API from \"../../utils/Stores/Beat/BeatsAPI\";\n\n\n\n\n\nexport function DrumCall(props) {\n    const data = [\n        { id: \"Conga Drum\", letter: \"Q\", src: \"http://s1download-universal-soundbank.com/wav/13882.wav\", audioRef: useRef() },\n        { id: \"Drum Rimshot\", letter: \"W\", src: \"http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/RIMSHOT1.WAV\", audioRef: useRef() },\n        { id: \"Bass Drum\", letter: \"E\", src: \"http://www.denhaku.com/r_box/sr16/sr16bd/brt hall.wav\", audioRef: useRef() },\n        { id: \"High Hat\", letter: \"A\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Long%20Open%20Hi%20Hat%20002-1653-Free-Loops.com.mp3\", audioRef: useRef() },\n        { id: \"Snare\", letter: \"S\", src: \"http://cd.textfiles.com/10000soundssongs/WAV/RVBSNARR.WAV\", audioRef: useRef() },\n        { id: \"Synth\", letter: \"D\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/Drop%20Off%20Bass%20Dist-87-Free-Loops.com.mp3\", audioRef: useRef() },\n        { id: \"Airhorn\", letter: \"Z\", src: \"http://www.able2products.com/sounds/horn.mp3\", audioRef: useRef() },\n        { id: \"Drum Solo\", letter: \"X\", src: \"http://www.maggiereid.com/flash/files/sound/Wave%20Files/RIMSHOT.WAV\", audioRef: useRef() },\n        { id: \"Latin Drums\", letter: \"C\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Latin%20Percussions-5244-Free-Loops.com.mp3\", audioRef: useRef() },\n    ]\n    // hooks:\n    // constructor(props) {\n    //     super(props)\n    //     this.scheduledEvents = [];\n        // this.drum = {\n        //     display: '',\n        //     recording: {\n        //         mode: 'RECORDING',\n        //         events: [],\n        //         currentTime: 0,\n        //         currentEvents: [],\n        //     },\n        //     lettersPressed: []\n        // }\n    // }\n\n    let scheduledEvents = [];\n    const [drum, setDrumState] = useState({\n        display: '',\n        recording: {\n            mode: 'RECORDING',\n            events: [],\n            currentTime: 0,\n            currentEvents: [],\n        }\n    });\n    const [lettersPressed, setLettersPressed] = useState([]);\n\n    const playSound = keyInfo => {\n        keyInfo.audioRef.current.play()\n        keyInfo.audioRef.current.currentTime = 0\n        handleDisplay(keyInfo.id)\n    }\n\n\n    const setRecording = value => {\n        setDrumState({\n            ...drum,\n            recording: Object.assign({}, drum.recording, value),\n        });\n    };\n\n    const addLetter = letter => {\n        console.log(\"previous drum: \", lettersPressed);\n        const newLettersPressed = [...lettersPressed, letter];\n        console.log(\"new drum: \", newLettersPressed);\n        setLettersPressed(newLettersPressed);\n    }\n\n    const getRecordingTime = () => {\n        if (drum.recording.events.length === 0) {\n            return 0;\n        }\n        return Math.max(\n            ...drum.recording.events.map(event => event.time + event.duration)\n        );\n    };\n\n    const onClickPlay = () => {\n        setRecording({\n            mode: 'PLAYING',\n        });\n        lettersPressed.forEach((keyInfo, index) => {\n            scheduledEvents.push(\n                setTimeout(() => {\n                    keyInfo.playSound();\n                }, index * 300),\n            );\n        });\n    };\n\n    const onClickStop = () => {\n        scheduledEvents.forEach(scheduledEvent => {\n            clearTimeout(scheduledEvent);\n        });\n        this.setRecording({\n            mode: 'RECORDING',\n            currentEvents: [],\n        });\n    };\n\n    const clearBtn = () => {\n        // document.removeEventListener('keydown')\n    }\n\n    const saveBtn = (keyInfo) => {\n        API.createBeats\n    }\n\n    const handleDisplay = display => setDrumState({ ...drum, display });\n\n    return (\n        <div id=\"drum-machine\">\n            <div id=\"drum-roll\">\n                {data.map(d => (\n                    <DrumMachine\n                        addLetter={addLetter}\n                        recording={drum.recording}\n                        setRecording={setRecording}\n                        audioRef={d.audioRef}\n                        playSound={() => playSound(d)}\n                        key={d.id}\n                        id={d.id}\n                        letter={d.letter}\n                        src={d.src}\n                    />\n                ))}\n            </div>\n            <div id=\"display\">{drum.display}</div>\n            <form>\n                <div className=\"form-group\">\n                    {/* <label for=\"beatTitle\">Title</label> */}\n                    <input type=\"text\" className=\"form-control\" id=\"beatTitle\" placeholder=\"Ice Cold Beat Name\" />\n                </div>\n                <div className=\"form-group\">\n                    {/* <label for=\"beatSeq\">Beat Sequence</label> */}\n                    <input type=\"text\" className=\"form-control\" id=\"beatSeq\" placeholder=\"Ice Cold Beat Sequence\" />\n                </div>\n                <button type=\"button\" className=\"btn btn-info\" onClick={saveBtn}>Save</button>\n                <button type=\"button\" className=\"btn btn-danger\" onClick={clearBtn}>Clear</button>\n                <button type=\"button\" className=\"btn btn-success\" onClick={onClickPlay}>Play</button>\n            </form>\n        </div>\n    )\n}\n\nexport default DrumCall;\n\n"]},"metadata":{},"sourceType":"module"}