{"ast":null,"code":"import _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/utils/Stores/Candle/CandleState.jsx\";\nimport React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport API from \"./CandleAPI\";\nimport actions from \"./CandleActions.json\";\nvar CANDLES_LOADING = actions.CANDLES_LOADING,\n    SET_CANDLES = actions.SET_CANDLES,\n    ADD_CANDLE = actions.ADD_CANDLE,\n    CANDLES_ERROR = actions.CANDLES_ERROR,\n    CLEAR_CANDLES_ERROR = actions.CLEAR_CANDLES_ERROR;\nvar CandleContext = createContext();\nvar Provider = CandleContext.Provider;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case CANDLES_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_CANDLES:\n      return _objectSpread({}, state, {\n        candles: action.candles,\n        loading: false,\n        pageLoading: false\n      });\n\n    case ADD_CANDLE:\n      return _objectSpread({}, state, {\n        candles: [action.candle].concat(_toConsumableArray(state.candles)),\n        loading: false\n      });\n\n    case CANDLES_ERROR:\n      return _objectSpread({}, state, {\n        error: action.message,\n        loading: false\n      });\n\n    case CLEAR_CANDLES_ERROR:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar CandleProvider = function CandleProvider(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? {} : _ref$value,\n      props = _objectWithoutProperties(_ref, [\"value\"]);\n\n  var _useReducer = useReducer(reducer, {\n    candles: [],\n    pageLoading: true,\n    loading: false,\n    error: null\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nvar useCandleContext = function useCandleContext() {\n  return useContext(CandleContext);\n};\n\nvar refreshCandles = function refreshCandles() {\n  var _useCandleContext = useCandleContext(),\n      _useCandleContext2 = _slicedToArray(_useCandleContext, 2),\n      loading = _useCandleContext2[0].loading,\n      candlesDispatch = _useCandleContext2[1];\n\n  useEffect(function () {\n    if (loading) {\n      return;\n    }\n\n    candlesDispatch({\n      type: CANDLES_LOADING\n    });\n    API.getCandles().then(function (candles) {\n      candlesDispatch({\n        type: SET_CANDLES,\n        candles: candles\n      });\n    });\n  }, []);\n};\n\nexport { CandleProvider as Provider, useCandleContext as useContext, refreshCandles as refreshOnLoad };","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/utils/Stores/Candle/CandleState.jsx"],"names":["React","createContext","useReducer","useContext","useEffect","API","actions","CANDLES_LOADING","SET_CANDLES","ADD_CANDLE","CANDLES_ERROR","CLEAR_CANDLES_ERROR","CandleContext","Provider","reducer","state","action","type","loading","candles","pageLoading","candle","error","message","CandleProvider","value","props","dispatch","useCandleContext","refreshCandles","candlesDispatch","getCandles","then","refreshOnLoad"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,SAAvD,QAAwE,OAAxE;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;IACQC,e,GAIkBD,O,CAJlBC,e;IACNC,W,GAGwBF,O,CAHxBE,W;IACAC,U,GAEwBH,O,CAFxBG,U;IACAC,a,GACwBJ,O,CADxBI,a;IACAC,mB,GAAwBL,O,CAAxBK,mB;AAEF,IAAMC,aAAa,GAAGX,aAAa,EAAnC;IACQY,Q,GAAaD,a,CAAbC,Q;;AAER,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,eAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAKV,WAAL;AACE,+BACKO,KADL;AAEEI,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAFlB;AAGED,QAAAA,OAAO,EAAE,KAHX;AAIEE,QAAAA,WAAW,EAAE;AAJf;;AAOF,SAAKX,UAAL;AACE,+BACKM,KADL;AAEEI,QAAAA,OAAO,GAAGH,MAAM,CAACK,MAAV,4BAAqBN,KAAK,CAACI,OAA3B,EAFT;AAGED,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKR,aAAL;AACE,+BACKK,KADL;AAEEO,QAAAA,KAAK,EAAEN,MAAM,CAACO,OAFhB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKP,mBAAL;AACE,+BACKI,KADL;AAEEO,QAAAA,KAAK,EAAE;AAFT;;AAKF;AACE,aAAOP,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,OAA8B;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,EAAmB;AAAA,MAAZC,KAAY;;AAAA,oBACzBxB,UAAU,CAACY,OAAD,EAAU;AAC5CK,IAAAA,OAAO,EAAE,EADmC;AAE5CC,IAAAA,WAAW,EAAE,IAF+B;AAG5CF,IAAAA,OAAO,EAAE,KAHmC;AAI5CI,IAAAA,KAAK,EAAE;AAJqC,GAAV,CADe;AAAA;AAAA,MAC5CP,KAD4C;AAAA,MACrCY,QADqC;;AAQnD,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACZ,KAAD,EAAQY,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CATD;;AAWA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,SAAOzB,UAAU,CAACS,aAAD,CAAjB;AACD,CAFD;;AAIA,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,0BACYD,gBAAgB,EAD5B;AAAA;AAAA,MAClBV,OADkB,yBAClBA,OADkB;AAAA,MACPY,eADO;;AAE3B1B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,OAAJ,EAAa;AACX;AACD;;AACDY,IAAAA,eAAe,CAAC;AAAEb,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAf;AACAF,IAAAA,GAAG,CAAC0B,UAAJ,GAAiBC,IAAjB,CAAsB,UAAAb,OAAO,EAAI;AAC/BW,MAAAA,eAAe,CAAC;AAAEb,QAAAA,IAAI,EAAET,WAAR;AAAqBW,QAAAA,OAAO,EAAPA;AAArB,OAAD,CAAf;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASD,CAXD;;AAaA,SAASK,cAAc,IAAIX,QAA3B,EAAqCe,gBAAgB,IAAIzB,UAAzD,EAAqE0B,cAAc,IAAII,aAAvF","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport API from \"./CandleAPI\";\nimport actions from \"./CandleActions.json\";\nconst { CANDLES_LOADING,\n  SET_CANDLES,\n  ADD_CANDLE,\n  CANDLES_ERROR,\n  CLEAR_CANDLES_ERROR } = actions;\n\nconst CandleContext = createContext();\nconst { Provider } = CandleContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case CANDLES_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case SET_CANDLES:\n      return {\n        ...state,\n        candles: action.candles,\n        loading: false,\n        pageLoading: false\n      };\n\n    case ADD_CANDLE:\n      return {\n        ...state,\n        candles: [action.candle, ...state.candles],\n        loading: false\n      };\n\n    case CANDLES_ERROR:\n      return {\n        ...state,\n        error: action.message,\n        loading: false\n      };\n\n    case CLEAR_CANDLES_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst CandleProvider = ({ value = {}, ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    candles: [],\n    pageLoading: true,\n    loading: false,\n    error: null\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useCandleContext = () => {\n  return useContext(CandleContext);\n};\n\nconst refreshCandles = () => {\n  const [{ loading }, candlesDispatch] = useCandleContext();\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    candlesDispatch({ type: CANDLES_LOADING });\n    API.getCandles().then(candles => {\n      candlesDispatch({ type: SET_CANDLES, candles });\n    });\n  }, []);\n};\n\nexport { CandleProvider as Provider, useCandleContext as useContext, refreshCandles as refreshOnLoad };\n"]},"metadata":{},"sourceType":"module"}