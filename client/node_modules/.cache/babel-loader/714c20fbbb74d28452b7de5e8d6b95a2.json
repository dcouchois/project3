{"ast":null,"code":"import _objectSpread from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/Drum/Drum.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./style.css\";\n\nfunction useKeyPress(keyInfo, addLetter) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyPressed = _useState2[0],\n      setKeyPressed = _useState2[1];\n\n  function downHandler(_ref) {\n    var key = _ref.key;\n    console.log(key, keyInfo.letter);\n\n    if (key === keyInfo.letter.toLowerCase()) {\n      setKeyPressed(false);\n      addLetter(keyInfo.letter);\n      setTimeout(function () {\n        return setKeyPressed(true);\n      }, 10);\n      keyInfo.audio.current.play();\n      keyInfo.audio.current.currentTime = 0;\n      keyInfo.handleDisplay(keyInfo.id);\n    }\n  }\n\n  useEffect(function () {\n    window.addEventListener('keydown', downHandler);\n    return function () {\n      window.removeEventListener('keydown', downHandler);\n    };\n  }, []);\n  return [keyPressed, setKeyPressed];\n} // document.addEventListener('DOMContentLoaded', () => {\n//     // 'use strict';\n//     let buffer = [];\n//     document.addEventListener('keydown', event => {\n//         const charList = 'qweasdzxc';\n//         const key = event.key.toLowerCase();\n//         if (charList.indexOf(key) === -1) return;\n//         buffer.push(key);\n//         console.log(buffer);\n//     });\n//     // document.addEventListener(\"clearBtn\", event => {\n//     //     event.preventDefault()\n//     //     buffer=[]\n//     //     console.log(\"clearBtn\");\n//     // })\n// });\n\n\nfunction DrumMachine(props) {\n  var audioRef = useRef();\n\n  var _useKeyPress = useKeyPress(_objectSpread({}, props, {\n    audio: audioRef\n  })),\n      _useKeyPress2 = _slicedToArray(_useKeyPress, 2),\n      keyPressed = _useKeyPress2[0],\n      setKeyPressed = _useKeyPress2[1];\n\n  var handleClick = function handleClick() {\n    setKeyPressed(false);\n    props.addLetter(props.letter);\n    setTimeout(function () {\n      return setKeyPressed(true);\n    }, 10);\n    audioRef.current.play();\n    audioRef.current.currentTime = 0;\n    props.handleDisplay(props.id);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"drum-machine\" + (keyPressed ? \" drum-animation\" : \"\"),\n    id: props.id,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.letter), React.createElement(\"audio\", {\n    ref: audioRef,\n    className: \"clip\",\n    src: props.src,\n    id: props.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\n;\nexport default DrumMachine;","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/Drum/Drum.js"],"names":["React","useEffect","useState","useRef","useKeyPress","keyInfo","addLetter","keyPressed","setKeyPressed","downHandler","key","console","log","letter","toLowerCase","setTimeout","audio","current","play","currentTime","handleDisplay","id","window","addEventListener","removeEventListener","DrumMachine","props","audioRef","handleClick","src"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./style.css\";\n\n\n\nfunction useKeyPress(keyInfo, addLetter){\n    const [keyPressed, setKeyPressed ] = useState (false)\n    \n    function downHandler({ key }) {\n        console.log(key, keyInfo.letter);\n        if (key === keyInfo.letter.toLowerCase()) {\n            setKeyPressed(false);\n            addLetter(keyInfo.letter);\n            setTimeout(() => setKeyPressed(true), 10);\n          keyInfo.audio.current.play()\n          keyInfo.audio.current.currentTime = 0\n          keyInfo.handleDisplay(keyInfo.id)\n        }\n      }\n    \n      useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        return () => {\n          window.removeEventListener('keydown', downHandler);\n        };\n      }, []);\n      return [keyPressed, setKeyPressed];\n}\n\n// document.addEventListener('DOMContentLoaded', () => {\n//     // 'use strict';\n\n//     let buffer = [];\n\n//     document.addEventListener('keydown', event => {\n//         const charList = 'qweasdzxc';\n//         const key = event.key.toLowerCase();\n\n//         if (charList.indexOf(key) === -1) return;\n\n//         buffer.push(key);\n\n//         console.log(buffer);\n//     });\n//     // document.addEventListener(\"clearBtn\", event => {\n//     //     event.preventDefault()\n//     //     buffer=[]\n//     //     console.log(\"clearBtn\");\n//     // })\n// });\n\n\n\nfunction DrumMachine (props) {\n    const audioRef = useRef();\n    const [keyPressed, setKeyPressed] = useKeyPress({\n        ...props,\n        audio: audioRef\n    })\n    const handleClick = () => {\n        setKeyPressed(false);\n        props.addLetter(props.letter);\n        setTimeout(() => setKeyPressed(true), 10);\n        audioRef.current.play()\n        audioRef.current.currentTime = 0\n        props.handleDisplay(props.id)\n    }\n\n        return (\n            <div className={\"drum-machine\" + (keyPressed ? \" drum-animation\" : \"\")}\n                id={props.id}\n                onClick={handleClick}\n            >\n                <h4>{props.letter}</h4>\n                <audio\n                    ref={audioRef}\n                    className=\"clip\"\n                    src={props.src}\n                    id={props.letter}>\n                </audio>\n            </div>\n        )\n};\n\nexport default DrumMachine;\n\n"]},"metadata":{},"sourceType":"module"}