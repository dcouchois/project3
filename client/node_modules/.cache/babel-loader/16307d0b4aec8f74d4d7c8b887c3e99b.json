{"ast":null,"code":"import _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/utils/Stores/Beat/BeatState.jsx\";\nimport React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport API from \"./BeatsAPI\";\nimport actions from \"./BeatActions.json\";\nvar BEATS_LOADING = actions.BEATS_LOADING,\n    SET_BEATS = actions.SET_BEATS,\n    ADD_BEAT = actions.ADD_BEAT,\n    BEATS_ERROR = actions.BEATS_ERROR,\n    CLEAR_BEATS_ERROR = actions.CLEAR_BEATS_ERROR;\nvar BeatContext = createContext();\nvar Provider = BeatContext.Provider;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case BEATS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_BEATS:\n      return _objectSpread({}, state, {\n        beats: action.beats,\n        loading: false,\n        pageLoading: false\n      });\n\n    case ADD_BEAT:\n      return _objectSpread({}, state, {\n        beats: [action.beat].concat(_toConsumableArray(state.beats)),\n        loading: false\n      });\n\n    case BEATS_ERROR:\n      return _objectSpread({}, state, {\n        error: action.message,\n        loading: false\n      });\n\n    case CLEAR_BEATS_ERROR:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar BeatProvider = function BeatProvider(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? {} : _ref$value,\n      props = _objectWithoutProperties(_ref, [\"value\"]);\n\n  var _useReducer = useReducer(reducer, {\n    beats: [],\n    pageLoading: true,\n    loading: false,\n    error: null\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nvar useBeatContext = function useBeatContext() {\n  return useContext(BeatContext);\n};\n\nvar refreshBeats = function refreshBeats() {\n  var _useBeatContext = useBeatContext(),\n      _useBeatContext2 = _slicedToArray(_useBeatContext, 2),\n      loading = _useBeatContext2[0].loading,\n      beatsDispatch = _useBeatContext2[1];\n\n  useEffect(function () {\n    if (loading) {\n      return;\n    }\n\n    beatsDispatch({\n      type: BEATS_LOADING\n    });\n    API.getBeats().then(function (beats) {\n      beatsDispatch({\n        type: SET_BEATS,\n        beats: beats\n      });\n    });\n  }, []);\n};\n\nexport { BeatProvider as Provider, useBeatContext as useContext, refreshBeats as refreshOnLoad };","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/utils/Stores/Beat/BeatState.jsx"],"names":["React","createContext","useReducer","useContext","useEffect","API","actions","BEATS_LOADING","SET_BEATS","ADD_BEAT","BEATS_ERROR","CLEAR_BEATS_ERROR","BeatContext","Provider","reducer","state","action","type","loading","beats","pageLoading","beat","error","message","BeatProvider","value","props","dispatch","useBeatContext","refreshBeats","beatsDispatch","getBeats","then","refreshOnLoad"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,SAAvD,QAAwE,OAAxE;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,oBAApB;IACQC,a,GAIgBD,O,CAJhBC,a;IACNC,S,GAGsBF,O,CAHtBE,S;IACAC,Q,GAEsBH,O,CAFtBG,Q;IACAC,W,GACsBJ,O,CADtBI,W;IACAC,iB,GAAsBL,O,CAAtBK,iB;AAEF,IAAMC,WAAW,GAAGX,aAAa,EAAjC;IACQY,Q,GAAaD,W,CAAbC,Q;;AAER,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAKV,SAAL;AACE,+BACKO,KADL;AAEEI,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAFhB;AAGED,QAAAA,OAAO,EAAE,KAHX;AAIEE,QAAAA,WAAW,EAAE;AAJf;;AAOF,SAAKX,QAAL;AACE,+BACKM,KADL;AAEEI,QAAAA,KAAK,GAAGH,MAAM,CAACK,IAAV,4BAAmBN,KAAK,CAACI,KAAzB,EAFP;AAGED,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKR,WAAL;AACE,+BACKK,KADL;AAEEO,QAAAA,KAAK,EAAEN,MAAM,CAACO,OAFhB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAKP,iBAAL;AACE,+BACKI,KADL;AAEEO,QAAAA,KAAK,EAAE;AAFT;;AAKF;AACE,aAAOP,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,IAAMS,YAAY,GAAG,SAAfA,YAAe,OAA8B;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,EAAmB;AAAA,MAAZC,KAAY;;AAAA,oBACvBxB,UAAU,CAACY,OAAD,EAAU;AAC5CK,IAAAA,KAAK,EAAE,EADqC;AAE5CC,IAAAA,WAAW,EAAE,IAF+B;AAG5CF,IAAAA,OAAO,EAAE,KAHmC;AAI5CI,IAAAA,KAAK,EAAE;AAJqC,GAAV,CADa;AAAA;AAAA,MAC1CP,KAD0C;AAAA,MACnCY,QADmC;;AAQjD,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACZ,KAAD,EAAQY,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CATD;;AAWA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SAAOzB,UAAU,CAACS,WAAD,CAAjB;AACD,CAFD;;AAIA,IAAMiB,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,wBACYD,cAAc,EAD1B;AAAA;AAAA,MAChBV,OADgB,uBAChBA,OADgB;AAAA,MACLY,aADK;;AAEzB1B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,OAAJ,EAAa;AACX;AACD;;AACDY,IAAAA,aAAa,CAAC;AAAEb,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAb;AACAF,IAAAA,GAAG,CAAC0B,QAAJ,GAAeC,IAAf,CAAoB,UAAAb,KAAK,EAAI;AAC3BW,MAAAA,aAAa,CAAC;AAAEb,QAAAA,IAAI,EAAET,SAAR;AAAmBW,QAAAA,KAAK,EAALA;AAAnB,OAAD,CAAb;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASD,CAXD;;AAaA,SAASK,YAAY,IAAIX,QAAzB,EAAmCe,cAAc,IAAIzB,UAArD,EAAiE0B,YAAY,IAAII,aAAjF","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\";\nimport API from \"./BeatsAPI\";\nimport actions from \"./BeatActions.json\";\nconst { BEATS_LOADING,\n  SET_BEATS,\n  ADD_BEAT,\n  BEATS_ERROR,\n  CLEAR_BEATS_ERROR } = actions;\n\nconst BeatContext = createContext();\nconst { Provider } = BeatContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case BEATS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case SET_BEATS:\n      return {\n        ...state,\n        beats: action.beats,\n        loading: false,\n        pageLoading: false\n      };\n\n    case ADD_BEAT:\n      return {\n        ...state,\n        beats: [action.beat, ...state.beats],\n        loading: false\n      };\n\n    case BEATS_ERROR:\n      return {\n        ...state,\n        error: action.message,\n        loading: false\n      };\n\n    case CLEAR_BEATS_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst BeatProvider = ({ value = {}, ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    beats: [],\n    pageLoading: true,\n    loading: false,\n    error: null\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useBeatContext = () => {\n  return useContext(BeatContext);\n};\n\nconst refreshBeats = () => {\n  const [{ loading }, beatsDispatch] = useBeatContext();\n  useEffect(() => {\n    if (loading) {\n      return;\n    }\n    beatsDispatch({ type: BEATS_LOADING });\n    API.getBeats().then(beats => {\n      beatsDispatch({ type: SET_BEATS, beats });\n    });\n  }, []);\n};\n\nexport { BeatProvider as Provider, useBeatContext as useContext, refreshBeats as refreshOnLoad };\n"]},"metadata":{},"sourceType":"module"}