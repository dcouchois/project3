{"ast":null,"code":"import _toConsumableArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/DrumCall/DrumCall.js\";\nimport React, { useState, useRef } from \"react\";\nimport DrumMachine from \"../Drum/Drum\";\nimport \"./style.css\";\nimport _ from \"lodash\";\nvar data = [{\n  id: \"Conga Drum\",\n  letter: \"Q\",\n  src: \"http://s1download-universal-soundbank.com/wav/13882.wav\"\n}, {\n  id: \"Drum Rimshot\",\n  letter: \"W\",\n  src: \"http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/RIMSHOT1.WAV\"\n}, {\n  id: \"Bass Drum\",\n  letter: \"E\",\n  src: \"http://www.denhaku.com/r_box/sr16/sr16bd/brt hall.wav\"\n}, {\n  id: \"High Hat\",\n  letter: \"A\",\n  src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Long%20Open%20Hi%20Hat%20002-1653-Free-Loops.com.mp3\"\n}, {\n  id: \"Snare\",\n  letter: \"S\",\n  src: \"http://cd.textfiles.com/10000soundssongs/WAV/RVBSNARR.WAV\"\n}, {\n  id: \"Synth\",\n  letter: \"D\",\n  src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/Drop%20Off%20Bass%20Dist-87-Free-Loops.com.mp3\"\n}, {\n  id: \"Airhorn\",\n  letter: \"Z\",\n  src: \"http://www.able2products.com/sounds/horn.mp3\"\n}, {\n  id: \"Drum Solo\",\n  letter: \"X\",\n  src: \"http://www.maggiereid.com/flash/files/sound/Wave%20Files/RIMSHOT.WAV\"\n}, {\n  id: \"Latin Drums\",\n  letter: \"C\",\n  src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Latin%20Percussions-5244-Free-Loops.com.mp3\"\n}];\nexport function DrumCall(props) {\n  var _this = this;\n\n  var audioRef = useRef(); // hooks:\n  // constructor(props) {\n  //     super(props)\n  //     this.scheduledEvents = [];\n  // this.drum = {\n  //     display: '',\n  //     recording: {\n  //         mode: 'RECORDING',\n  //         events: [],\n  //         currentTime: 0,\n  //         currentEvents: [],\n  //     },\n  //     lettersPressed: []\n  // }\n  // }\n\n  var scheduledEvents = [];\n\n  var _useState = useState({\n    display: '',\n    recording: {\n      mode: 'RECORDING',\n      events: [],\n      currentTime: 0,\n      currentEvents: []\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      drum = _useState2[0],\n      setDrumState = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lettersPressed = _useState4[0],\n      setLettersPressed = _useState4[1];\n\n  var playSound = function playSound(letter) {};\n\n  var setRecording = function setRecording(value) {\n    setDrumState(_objectSpread({}, drum, {\n      recording: Object.assign({}, drum.recording, value)\n    }));\n  };\n\n  var addLetter = function addLetter(letter) {\n    console.log(\"previous drum: \", lettersPressed);\n    var newLettersPressed = [].concat(_toConsumableArray(lettersPressed), [letter]);\n    console.log(\"new drum: \", newLettersPressed);\n    setLettersPressed(newLettersPressed);\n  };\n\n  var getRecordingTime = function getRecordingTime() {\n    if (drum.recording.events.length === 0) {\n      return 0;\n    }\n\n    return Math.max.apply(Math, _toConsumableArray(drum.recording.events.map(function (event) {\n      return event.time + event.duration;\n    })));\n  };\n\n  var onClickPlay = function onClickPlay() {\n    setRecording({\n      mode: 'PLAYING'\n    });\n    lettersPressed.forEach(function (letter, index) {\n      scheduledEvents.push(setTimeout(function () {}, index * 250));\n    });\n  };\n\n  var onClickStop = function onClickStop() {\n    scheduledEvents.forEach(function (scheduledEvent) {\n      clearTimeout(scheduledEvent);\n    });\n\n    _this.setRecording({\n      mode: 'RECORDING',\n      currentEvents: []\n    });\n  };\n\n  var clearBtn = function clearBtn() {// document.removeEventListener('keydown')\n  };\n\n  var saveBtn = function saveBtn() {};\n\n  var handleDisplay = function handleDisplay(display) {\n    return setDrumState(_objectSpread({}, drum, {\n      display: display\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    id: \"drum-machine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"drum-roll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, data.map(function (d) {\n    return React.createElement(DrumMachine, {\n      addLetter: addLetter,\n      recording: drum.recording,\n      setRecording: setRecording,\n      key: d.id,\n      id: d.id,\n      letter: d.letter,\n      src: d.src,\n      handleDisplay: handleDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    id: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, drum.display), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"beatTitle\",\n    placeholder: \"Ice Cold Beat Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"beatSeq\",\n    placeholder: \"Ice Cold Beat Sequence\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info\",\n    onClick: saveBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: clearBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success\",\n    onClick: onClickPlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Play\")), React.createElement(\"audio\", {\n    ref: audioRef,\n    className: \"clip\",\n    src: props.src,\n    id: props.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }));\n}\nexport default DrumCall;","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/DrumCall/DrumCall.js"],"names":["React","useState","useRef","DrumMachine","_","data","id","letter","src","DrumCall","props","audioRef","scheduledEvents","display","recording","mode","events","currentTime","currentEvents","drum","setDrumState","lettersPressed","setLettersPressed","playSound","setRecording","value","Object","assign","addLetter","console","log","newLettersPressed","getRecordingTime","length","Math","max","map","event","time","duration","onClickPlay","forEach","index","push","setTimeout","onClickStop","scheduledEvent","clearTimeout","clearBtn","saveBtn","handleDisplay","d"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,aAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AAIA,IAAMC,IAAI,GAAG,CACT;AAAEC,EAAAA,EAAE,EAAE,YAAN;AAAoBC,EAAAA,MAAM,EAAE,GAA5B;AAAiCC,EAAAA,GAAG,EAAE;AAAtC,CADS,EAET;AAAEF,EAAAA,EAAE,EAAE,cAAN;AAAsBC,EAAAA,MAAM,EAAE,GAA9B;AAAmCC,EAAAA,GAAG,EAAE;AAAxC,CAFS,EAGT;AAAEF,EAAAA,EAAE,EAAE,WAAN;AAAmBC,EAAAA,MAAM,EAAE,GAA3B;AAAgCC,EAAAA,GAAG,EAAE;AAArC,CAHS,EAIT;AAAEF,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,MAAM,EAAE,GAA1B;AAA+BC,EAAAA,GAAG,EAAE;AAApC,CAJS,EAKT;AAAEF,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,MAAM,EAAE,GAAvB;AAA4BC,EAAAA,GAAG,EAAE;AAAjC,CALS,EAMT;AAAEF,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,MAAM,EAAE,GAAvB;AAA4BC,EAAAA,GAAG,EAAE;AAAjC,CANS,EAOT;AAAEF,EAAAA,EAAE,EAAE,SAAN;AAAiBC,EAAAA,MAAM,EAAE,GAAzB;AAA8BC,EAAAA,GAAG,EAAE;AAAnC,CAPS,EAQT;AAAEF,EAAAA,EAAE,EAAE,WAAN;AAAmBC,EAAAA,MAAM,EAAE,GAA3B;AAAgCC,EAAAA,GAAG,EAAE;AAArC,CARS,EAST;AAAEF,EAAAA,EAAE,EAAE,aAAN;AAAqBC,EAAAA,MAAM,EAAE,GAA7B;AAAkCC,EAAAA,GAAG,EAAE;AAAvC,CATS,CAAb;AAaA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC5B,MAAMC,QAAQ,GAAGT,MAAM,EAAvB,CAD4B,CAE5B;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;AAEA,MAAIU,eAAe,GAAG,EAAtB;;AAlB4B,kBAmBCX,QAAQ,CAAC;AAClCY,IAAAA,OAAO,EAAE,EADyB;AAElCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPC,MAAAA,WAAW,EAAE,CAHN;AAIPC,MAAAA,aAAa,EAAE;AAJR;AAFuB,GAAD,CAnBT;AAAA;AAAA,MAmBrBC,IAnBqB;AAAA,MAmBfC,YAnBe;;AAAA,mBA4BgBnB,QAAQ,CAAC,EAAD,CA5BxB;AAAA;AAAA,MA4BrBoB,cA5BqB;AAAA,MA4BLC,iBA5BK;;AA8B5B,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAhB,MAAM,EAAI,CAE3B,CAFD;;AAKA,MAAMiB,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1BL,IAAAA,YAAY,mBACLD,IADK;AAERL,MAAAA,SAAS,EAAEY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,IAAI,CAACL,SAAvB,EAAkCW,KAAlC;AAFH,OAAZ;AAIH,GALD;;AAOA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAAArB,MAAM,EAAI;AACxBsB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,cAA/B;AACA,QAAMU,iBAAiB,gCAAOV,cAAP,IAAuBd,MAAvB,EAAvB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,iBAA1B;AACAT,IAAAA,iBAAiB,CAACS,iBAAD,CAAjB;AACH,GALD;;AAOA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,QAAIb,IAAI,CAACL,SAAL,CAAeE,MAAf,CAAsBiB,MAAtB,KAAiC,CAArC,EAAwC;AACpC,aAAO,CAAP;AACH;;AACD,WAAOC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBACJf,IAAI,CAACL,SAAL,CAAeE,MAAf,CAAsBoB,GAAtB,CAA0B,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACE,QAAvB;AAAA,KAA/B,CADI,EAAX;AAGH,GAPD;;AASA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBhB,IAAAA,YAAY,CAAC;AACTT,MAAAA,IAAI,EAAE;AADG,KAAD,CAAZ;AAGAM,IAAAA,cAAc,CAACoB,OAAf,CAAuB,UAAClC,MAAD,EAASmC,KAAT,EAAmB;AACtC9B,MAAAA,eAAe,CAAC+B,IAAhB,CACIC,UAAU,CAAC,YAAM,CAChB,CADS,EACPF,KAAK,GAAG,GADD,CADd;AAIH,KALD;AAMH,GAVD;;AAYA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBjC,IAAAA,eAAe,CAAC6B,OAAhB,CAAwB,UAAAK,cAAc,EAAI;AACtCC,MAAAA,YAAY,CAACD,cAAD,CAAZ;AACH,KAFD;;AAGA,IAAA,KAAI,CAACtB,YAAL,CAAkB;AACdT,MAAAA,IAAI,EAAE,WADQ;AAEdG,MAAAA,aAAa,EAAE;AAFD,KAAlB;AAIH,GARD;;AAUA,MAAM8B,QAAQ,GAAG,SAAXA,QAAW,GAAM,CACnB;AACH,GAFD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM,CAErB,CAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAArC,OAAO;AAAA,WAAIO,YAAY,mBAAMD,IAAN;AAAYN,MAAAA,OAAO,EAAPA;AAAZ,OAAhB;AAAA,GAA7B;;AAEA,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,IAAI,CAAC+B,GAAL,CAAS,UAAAe,CAAC;AAAA,WACP,oBAAC,WAAD;AACI,MAAA,SAAS,EAAEvB,SADf;AAEI,MAAA,SAAS,EAAET,IAAI,CAACL,SAFpB;AAGI,MAAA,YAAY,EAAEU,YAHlB;AAII,MAAA,GAAG,EAAE2B,CAAC,CAAC7C,EAJX;AAKI,MAAA,EAAE,EAAE6C,CAAC,CAAC7C,EALV;AAMI,MAAA,MAAM,EAAE6C,CAAC,CAAC5C,MANd;AAOI,MAAA,GAAG,EAAE4C,CAAC,CAAC3C,GAPX;AAQI,MAAA,aAAa,EAAE0C,aARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAV,CADL,CADJ,EAeI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB/B,IAAI,CAACN,OAAxB,CAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,EAAE,EAAC,WAA/C;AAA2D,IAAA,WAAW,EAAC,oBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,EAAE,EAAC,SAA/C;AAAyD,IAAA,WAAW,EAAC,wBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,OAAO,EAAEoC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAUI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAiD,IAAA,OAAO,EAAED,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,EAWI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAER,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,CAhBJ,EA6BI;AACI,IAAA,GAAG,EAAE7B,QADT;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,GAAG,EAAED,KAAK,CAACF,GAHf;AAII,IAAA,EAAE,EAAEE,KAAK,CAACH,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADJ;AAsCH;AAED,eAAeE,QAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport DrumMachine from \"../Drum/Drum\";\nimport \"./style.css\";\nimport _ from \"lodash\";\n\n\n\nconst data = [\n    { id: \"Conga Drum\", letter: \"Q\", src: \"http://s1download-universal-soundbank.com/wav/13882.wav\" },\n    { id: \"Drum Rimshot\", letter: \"W\", src: \"http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/RIMSHOT1.WAV\" },\n    { id: \"Bass Drum\", letter: \"E\", src: \"http://www.denhaku.com/r_box/sr16/sr16bd/brt hall.wav\" },\n    { id: \"High Hat\", letter: \"A\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Long%20Open%20Hi%20Hat%20002-1653-Free-Loops.com.mp3\" },\n    { id: \"Snare\", letter: \"S\", src: \"http://cd.textfiles.com/10000soundssongs/WAV/RVBSNARR.WAV\" },\n    { id: \"Synth\", letter: \"D\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/Drop%20Off%20Bass%20Dist-87-Free-Loops.com.mp3\" },\n    { id: \"Airhorn\", letter: \"Z\", src: \"http://www.able2products.com/sounds/horn.mp3\" },\n    { id: \"Drum Solo\", letter: \"X\", src: \"http://www.maggiereid.com/flash/files/sound/Wave%20Files/RIMSHOT.WAV\" },\n    { id: \"Latin Drums\", letter: \"C\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Latin%20Percussions-5244-Free-Loops.com.mp3\" },\n]\n\n\nexport function DrumCall(props) {\n    const audioRef = useRef();\n    // hooks:\n    // constructor(props) {\n    //     super(props)\n    //     this.scheduledEvents = [];\n        // this.drum = {\n        //     display: '',\n        //     recording: {\n        //         mode: 'RECORDING',\n        //         events: [],\n        //         currentTime: 0,\n        //         currentEvents: [],\n        //     },\n        //     lettersPressed: []\n        // }\n    // }\n\n    let scheduledEvents = [];\n    const [drum, setDrumState] = useState({\n        display: '',\n        recording: {\n            mode: 'RECORDING',\n            events: [],\n            currentTime: 0,\n            currentEvents: [],\n        }\n    });\n    const [lettersPressed, setLettersPressed] = useState([]);\n\n    const playSound = letter => {\n\n    }\n\n\n    const setRecording = value => {\n        setDrumState({\n            ...drum,\n            recording: Object.assign({}, drum.recording, value),\n        });\n    };\n\n    const addLetter = letter => {\n        console.log(\"previous drum: \", lettersPressed);\n        const newLettersPressed = [...lettersPressed, letter];\n        console.log(\"new drum: \", newLettersPressed);\n        setLettersPressed(newLettersPressed);\n    }\n\n    const getRecordingTime = () => {\n        if (drum.recording.events.length === 0) {\n            return 0;\n        }\n        return Math.max(\n            ...drum.recording.events.map(event => event.time + event.duration)\n        );\n    };\n\n    const onClickPlay = () => {\n        setRecording({\n            mode: 'PLAYING',\n        });\n        lettersPressed.forEach((letter, index) => {\n            scheduledEvents.push(\n                setTimeout(() => {\n                }, index * 250),\n            );\n        });\n    };\n\n    const onClickStop = () => {\n        scheduledEvents.forEach(scheduledEvent => {\n            clearTimeout(scheduledEvent);\n        });\n        this.setRecording({\n            mode: 'RECORDING',\n            currentEvents: [],\n        });\n    };\n\n    const clearBtn = () => {\n        // document.removeEventListener('keydown')\n    }\n\n    const saveBtn = () => {\n\n    }\n\n    const handleDisplay = display => setDrumState({ ...drum, display });\n\n    return (\n        <div id=\"drum-machine\">\n            <div id=\"drum-roll\">\n                {data.map(d => (\n                    <DrumMachine\n                        addLetter={addLetter}\n                        recording={drum.recording}\n                        setRecording={setRecording}\n                        key={d.id}\n                        id={d.id}\n                        letter={d.letter}\n                        src={d.src}\n                        handleDisplay={handleDisplay}\n                    />\n                ))}\n            </div>\n            <div id=\"display\">{drum.display}</div>\n            <form>\n                <div className=\"form-group\">\n                    {/* <label for=\"beatTitle\">Title</label> */}\n                    <input type=\"text\" className=\"form-control\" id=\"beatTitle\" placeholder=\"Ice Cold Beat Name\" />\n                </div>\n                <div className=\"form-group\">\n                    {/* <label for=\"beatSeq\">Beat Sequence</label> */}\n                    <input type=\"text\" className=\"form-control\" id=\"beatSeq\" placeholder=\"Ice Cold Beat Sequence\" />\n                </div>\n                <button type=\"button\" className=\"btn btn-info\" onClick={saveBtn}>Save</button>\n                <button type=\"button\" className=\"btn btn-danger\" onClick={clearBtn}>Clear</button>\n                <button type=\"button\" className=\"btn btn-success\" onClick={onClickPlay}>Play</button>\n            </form>\n            <audio\n                ref={audioRef}\n                className=\"clip\"\n                src={props.src}\n                id={props.letter}>\n            </audio>\n        </div>\n    )\n}\n\nexport default DrumCall;\n\n"]},"metadata":{},"sourceType":"module"}