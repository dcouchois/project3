{"ast":null,"code":"import _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/DrumCall/DrumCall.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DrumMachine from \"../Drum/Drum\";\nimport \"./style.css\";\n\nfunction DrumCall() {\n  var _this = this;\n\n  var useKeyPress = [{\n    id: \"conga\",\n    letter: \"Q\",\n    src: \"http://s1download-universal-soundbank.com/wav/13882.wav\"\n  }, {\n    id: \"drum-rimshot\",\n    letter: \"W\",\n    src: \"http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/RIMSHOT1.WAV\"\n  }, {\n    id: \"bass-drum\",\n    letter: \"E\",\n    src: \"http://www.denhaku.com/r_box/sr16/sr16bd/brt hall.wav\"\n  }, {\n    id: \"high-hat\",\n    letter: \"A\",\n    src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Long%20Open%20Hi%20Hat%20002-1653-Free-Loops.com.mp3\"\n  }, {\n    id: \"snare\",\n    letter: \"S\",\n    src: \"http://cd.textfiles.com/10000soundssongs/WAV/RVBSNARR.WAV\"\n  }, {\n    id: \"synth\",\n    letter: \"D\",\n    src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/Drop%20Off%20Bass%20Dist-87-Free-Loops.com.mp3\"\n  }, {\n    id: \"airhorn\",\n    letter: \"Z\",\n    src: \"http://www.able2products.com/sounds/horn.mp3\"\n  }, {\n    id: \"drum-solo\",\n    letter: \"X\",\n    src: \"http://www.maggiereid.com/flash/files/sound/Wave%20Files/RIMSHOT.WAV\"\n  }, {\n    id: \"latin-drums\",\n    letter: \"C\",\n    src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Latin%20Percussions-5244-Free-Loops.com.mp3\"\n  }];\n\n  handleDisplay = function handleDisplay(display) {\n    return _this.setState({\n      display: display\n    });\n  };\n\n  return React.createElement(\"div\", {\n    id: \"drum-machine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"drum-roll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, useKeyPress.map(function (d) {\n    return React.createElement(DrumMachine, {\n      id: d.id,\n      letter: d.letter,\n      src: d.src,\n      handleDisplay: _this.handleDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    id: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, this.state.display));\n}\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyPressed = _useState2[0],\n      setKeyPressed = _useState2[1]; // If pressed key is our target key then set to true\n\n\n  function downHandler(_ref) {\n    var key = _ref.key;\n\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  } // If released key is our target key then set to false\n\n\n  var upHandler = function upHandler(_ref2) {\n    var key = _ref2.key;\n\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }; // Add event listeners\n\n\n  useEffect(function () {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler); // Remove event listeners on cleanup\n\n    return function () {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n\nexport default DrumCall;","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/DrumCall/DrumCall.js"],"names":["React","useState","useEffect","DrumMachine","DrumCall","useKeyPress","id","letter","src","handleDisplay","display","setState","map","d","state","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DrumMachine from \"../Drum/Drum\";\nimport \"./style.css\";\n\nfunction DrumCall() {\n    const useKeyPress = [\n        { id: \"conga\", letter: \"Q\", src: \"http://s1download-universal-soundbank.com/wav/13882.wav\" },\n        { id: \"drum-rimshot\", letter: \"W\", src: \"http://cd.textfiles.com/cdaction/cdaction47b/BEAT2000/SOUNDS/SFX/RIMSHOT1.WAV\" },\n        { id: \"bass-drum\", letter: \"E\", src: \"http://www.denhaku.com/r_box/sr16/sr16bd/brt hall.wav\" },\n        { id: \"high-hat\", letter: \"A\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Long%20Open%20Hi%20Hat%20002-1653-Free-Loops.com.mp3\" },\n        { id: \"snare\", letter: \"S\", src: \"http://cd.textfiles.com/10000soundssongs/WAV/RVBSNARR.WAV\" },\n        { id: \"synth\", letter: \"D\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/3/3/Drop%20Off%20Bass%20Dist-87-Free-Loops.com.mp3\" },\n        { id: \"airhorn\", letter: \"Z\", src: \"http://www.able2products.com/sounds/horn.mp3\" },\n        { id: \"drum-solo\", letter: \"X\", src: \"http://www.maggiereid.com/flash/files/sound/Wave%20Files/RIMSHOT.WAV\" },\n        { id: \"latin-drums\", letter: \"C\", src: \"http://dight310.byu.edu/media/audio/FreeLoops.com/5/5/Latin%20Percussions-5244-Free-Loops.com.mp3\" },\n    ]\n\n    handleDisplay = display => this.setState({ display })\n\n    return (\n        <div id=\"drum-machine\" >\n            <div id=\"drum-roll\">\n                {useKeyPress.map(d => (\n                    <DrumMachine\n                        id={d.id}\n                        letter={d.letter}\n                        src={d.src}\n                        handleDisplay={this.handleDisplay}\n                    />\n                ))}\n            </div>\n            <div id=\"display\">{this.state.display}</div>\n        </div>\n    )\n}\n\nfunction useKeyPress(targetKey) {\n    // State for keeping track of whether key is pressed\n    const [keyPressed, setKeyPressed] = useState(false);\n  \n    // If pressed key is our target key then set to true\n    function downHandler({ key }) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n  \n    // If released key is our target key then set to false\n    const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n  \n    // Add event listeners\n    useEffect(() => {\n      window.addEventListener('keydown', downHandler);\n      window.addEventListener('keyup', upHandler);\n      // Remove event listeners on cleanup\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n        window.removeEventListener('keyup', upHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n  \n    return keyPressed;\n  }\n\n\nexport default DrumCall;\n\n"]},"metadata":{},"sourceType":"module"}