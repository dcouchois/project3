{"ast":null,"code":"import _slicedToArray from \"/Users/deannaguzman/Documents/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/deannaguzman/Documents/project3/client/src/pages/Candle/Create/CandleCreate.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Candle from '../../../utils/Stores/Candle';\nimport User from \"../../../utils/Stores/User\";\nimport { CandleError } from '../../../components';\nimport { useHistory } from 'react-router-dom';\nvar _Candle$actions = Candle.actions,\n    CANDLES_LOADING = _Candle$actions.CANDLES_LOADING,\n    ADD_CANDLE = _Candle$actions.ADD_CANDLE,\n    CANDLES_ERROR = _Candle$actions.CANDLES_ERROR;\nexport default function () {\n  User.refreshOnLoad();\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validated = _useState2[0],\n      setValidated = _useState2[1];\n\n  var _Candle$useContext = Candle.useContext(),\n      _Candle$useContext2 = _slicedToArray(_Candle$useContext, 2),\n\n  /* user not needed */\n  candleDispatch = _Candle$useContext2[1];\n\n  var nameInput = useRef();\n  var scentInput = useRef();\n  var heightInput = useRef();\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      setValidated(true);\n      return;\n    }\n\n    var name = nameInput.current.value;\n    var scent = scentInput.current.value;\n    var height = heightInput.current.value; // If we have an email and password we run the loginUser function and clear the form\n\n    createCandle(name, scent, height);\n  }; // createCandle does a post to our \"api/login\" route and if successful, redirects us the the members page\n\n\n  function createCandle(name, scent, height) {\n    setValidated(false);\n    candleDispatch({\n      type: CANDLES_LOADING\n    });\n    Candle.API.createCandle({\n      name: name,\n      scent: scent,\n      height: height\n    }).then(function (candle) {\n      candleDispatch({\n        type: ADD_CANDLE,\n        candle: candle\n      });\n      history.push(\"/candle\");\n    }).catch(function (err) {\n      candleDispatch({\n        type: CANDLES_ERROR,\n        message: err\n      });\n    });\n  }\n\n  return React.createElement(Container, {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Create Candle\"), React.createElement(Form, {\n    validated: validated,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formCandleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    required: true,\n    pattern: \".*\\\\S+.*\",\n    type: \"text\",\n    placeholder: \"Enter Candle Name\",\n    ref: nameInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Name is required.\")), React.createElement(Form.Group, {\n    controlId: \"formCandleScent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Scent\"), React.createElement(Form.Control, {\n    required: true,\n    pattern: \".*\\\\S+.*\",\n    type: \"text\",\n    placeholder: \"Enter Candle Scent\",\n    ref: scentInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Scent is required.\")), React.createElement(Form.Group, {\n    controlId: \"formCandleHeight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Height\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"number\",\n    placeholder: \"Enter Candle Height\",\n    ref: heightInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Height is required and must be a number.\")), React.createElement(CandleError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Create\")))));\n}","map":{"version":3,"sources":["/Users/deannaguzman/Documents/project3/client/src/pages/Candle/Create/CandleCreate.jsx"],"names":["React","useState","useRef","Form","Button","Container","Row","Col","Candle","User","CandleError","useHistory","actions","CANDLES_LOADING","ADD_CANDLE","CANDLES_ERROR","refreshOnLoad","history","validated","setValidated","useContext","candleDispatch","nameInput","scentInput","heightInput","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","name","current","value","scent","height","createCandle","type","API","then","candle","push","catch","err","message","span","offset"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;sBAEuDH,MAAM,CAACI,O;IAAtDC,e,mBAAAA,e;IAAiBC,U,mBAAAA,U;IAAYC,a,mBAAAA,a;AAErC,eAAe,YAAY;AACvBN,EAAAA,IAAI,CAACO,aAAL;AACA,MAAMC,OAAO,GAAGN,UAAU,EAA1B;;AAFuB,kBAGWV,QAAQ,CAAC,KAAD,CAHnB;AAAA;AAAA,MAGhBiB,SAHgB;AAAA,MAGLC,YAHK;;AAAA,2BAIyBX,MAAM,CAACY,UAAP,EAJzB;AAAA;;AAIhB;AAAuBC,EAAAA,cAJP;;AAKvB,MAAMC,SAAS,GAAGpB,MAAM,EAAxB;AACA,MAAMqB,UAAU,GAAGrB,MAAM,EAAzB;AACA,MAAMsB,WAAW,GAAGtB,MAAM,EAA1B;;AAEA,MAAMuB,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACG,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AAChCX,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH;;AACD,QAAMY,IAAI,GAAGT,SAAS,CAACU,OAAV,CAAkBC,KAA/B;AACA,QAAMC,KAAK,GAAGX,UAAU,CAACS,OAAX,CAAmBC,KAAjC;AACA,QAAME,MAAM,GAAGX,WAAW,CAACQ,OAAZ,CAAoBC,KAAnC,CAT0B,CAW1B;;AACAG,IAAAA,YAAY,CAACL,IAAD,EAAOG,KAAP,EAAcC,MAAd,CAAZ;AACH,GAbD,CATuB,CAwBvB;;;AACA,WAASC,YAAT,CAAsBL,IAAtB,EAA4BG,KAA5B,EAAmCC,MAAnC,EAA2C;AACvChB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,cAAc,CAAC;AAAEgB,MAAAA,IAAI,EAAExB;AAAR,KAAD,CAAd;AACAL,IAAAA,MAAM,CAAC8B,GAAP,CAAWF,YAAX,CAAwB;AACpBL,MAAAA,IAAI,EAAJA,IADoB;AAEpBG,MAAAA,KAAK,EAALA,KAFoB;AAGpBC,MAAAA,MAAM,EAANA;AAHoB,KAAxB,EAIGI,IAJH,CAIQ,UAAAC,MAAM,EAAI;AACdnB,MAAAA,cAAc,CAAC;AAAEgB,QAAAA,IAAI,EAAEvB,UAAR;AAAoB0B,QAAAA,MAAM,EAANA;AAApB,OAAD,CAAd;AACAvB,MAAAA,OAAO,CAACwB,IAAR,CAAa,SAAb;AACH,KAPD,EAOGC,KAPH,CAOS,UAACC,GAAD,EAAS;AACdtB,MAAAA,cAAc,CAAC;AAAEgB,QAAAA,IAAI,EAAEtB,aAAR;AAAuB6B,QAAAA,OAAO,EAAED;AAAhC,OAAD,CAAd;AACH,KATD;AAUH;;AAED,SACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEE,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAE5B,SADf;AAEI,IAAA,QAAQ,EAAEO,YAFd;AAGI,IAAA,UAAU,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,mBAJhB;AAKI,IAAA,GAAG,EAAEH,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARJ,CAJJ,EAiBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,oBAJhB;AAKI,IAAA,GAAG,EAAEC,UALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,CAjBJ,EA8BI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,WAAW,EAAC,qBAHhB;AAII,IAAA,GAAG,EAAEC,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAPJ,CA9BJ,EAyCQ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCR,EA0CI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CJ,CAFJ,CADJ,CADJ,CADJ;AAuDH","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Candle from '../../../utils/Stores/Candle';\nimport User from \"../../../utils/Stores/User\";\nimport { CandleError } from '../../../components';\nimport { useHistory } from 'react-router-dom';\n\nconst { CANDLES_LOADING, ADD_CANDLE, CANDLES_ERROR } = Candle.actions;\n\nexport default function () {\n    User.refreshOnLoad();\n    const history = useHistory();\n    const [validated, setValidated] = useState(false);\n    const [/* user not needed */, candleDispatch] = Candle.useContext();\n    const nameInput = useRef();\n    const scentInput = useRef();\n    const heightInput = useRef();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            setValidated(true);\n            return;\n        }\n        const name = nameInput.current.value;\n        const scent = scentInput.current.value;\n        const height = heightInput.current.value;\n\n        // If we have an email and password we run the loginUser function and clear the form\n        createCandle(name, scent, height);\n    };\n\n    // createCandle does a post to our \"api/login\" route and if successful, redirects us the the members page\n    function createCandle(name, scent, height) {\n        setValidated(false);\n        candleDispatch({ type: CANDLES_LOADING });\n        Candle.API.createCandle({\n            name,\n            scent,\n            height\n        }).then(candle => {\n            candleDispatch({ type: ADD_CANDLE, candle });\n            history.push(\"/candle\");\n        }).catch((err) => {\n            candleDispatch({ type: CANDLES_ERROR, message: err });\n        });\n    }\n\n    return (\n        <Container className=\"mt-5\">\n            <Row>\n                <Col md={{ span: 6, offset: 3 }}>\n                    <h2>Create Candle</h2>\n                    <Form\n                        validated={validated}\n                        onSubmit={handleSubmit}\n                        noValidate>\n                        <Form.Group controlId=\"formCandleName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                required\n                                pattern=\".*\\S+.*\"\n                                type=\"text\"\n                                placeholder=\"Enter Candle Name\"\n                                ref={nameInput} />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Name is required.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formCandleScent\">\n                            <Form.Label>Scent</Form.Label>\n                            <Form.Control\n                                required\n                                pattern=\".*\\S+.*\"\n                                type=\"text\"\n                                placeholder=\"Enter Candle Scent\"\n                                ref={scentInput} />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Scent is required.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formCandleHeight\">\n                            <Form.Label>Height</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                placeholder=\"Enter Candle Height\"\n                                ref={heightInput} />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Height is required and must be a number.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                            <CandleError />\n                        <Button variant=\"primary\" type=\"submit\">\n                            Create\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}