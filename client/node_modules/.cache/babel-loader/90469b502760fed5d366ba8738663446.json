{"ast":null,"code":"import _slicedToArray from \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/User/Error/Error.jsx\";\nimport React, { useEffect } from \"react\";\nimport User from '../../../utils/Stores/User';\nimport Error from '../../Error';\nvar CLEAR_USER_ERROR = User.actions.CLEAR_USER_ERROR;\nexport default function () {\n  var _User$useContext = User.useContext(),\n      _User$useContext2 = _slicedToArray(_User$useContext, 2),\n      error = _User$useContext2[0].error,\n      userDispatch = _User$useContext2[1];\n\n  var message = null;\n\n  if (error) {\n    if (error.response && error.response.data && error.response.data.errors && error.response.data.errors[0] && error.response.data.errors[0].message) {\n      message = error.response.data.errors[0].message;\n    } else if (error.request && error.request.status === 401) {\n      message = \"Incorrect email or password\";\n    } else {\n      message = error.message || error.response && error.response.data;\n    }\n  }\n\n  var messageTimeout;\n  useEffect(function () {\n    if (!message) {\n      return;\n    }\n\n    clearTimeout(messageTimeout);\n    messageTimeout = setTimeout(function () {\n      userDispatch({\n        type: CLEAR_USER_ERROR\n      });\n    }, 5500);\n  }, [message]);\n  return React.createElement(Error, {\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/Dillon/Documents/BOOTCAMP_2019/Repository/project3/client/src/components/User/Error/Error.jsx"],"names":["React","useEffect","User","Error","CLEAR_USER_ERROR","actions","useContext","error","userDispatch","message","response","data","errors","request","status","messageTimeout","clearTimeout","setTimeout","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;IAEQC,gB,GAAqBF,IAAI,CAACG,O,CAA1BD,gB;AAER,eAAe,YAAY;AAAA,yBACWF,IAAI,CAACI,UAAL,EADX;AAAA;AAAA,MACdC,KADc,wBACdA,KADc;AAAA,MACLC,YADK;;AAEvB,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAIF,KAAJ,EAAW;AACP,QAAIA,KAAK,CAACG,QAAN,IACGH,KAAK,CAACG,QAAN,CAAeC,IADlB,IAEGJ,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,MAFvB,IAGGL,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,CAA3B,CAHH,IAIGL,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BH,OAJrC,EAI8C;AAC1CA,MAAAA,OAAO,GAAGF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BH,OAAxC;AACH,KAND,MAOK,IAAIF,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACM,OAAN,CAAcC,MAAd,KAAyB,GAA9C,EAAmD;AACpDL,MAAAA,OAAO,GAAG,6BAAV;AACH,KAFI,MAEE;AACHA,MAAAA,OAAO,GAAGF,KAAK,CAACE,OAAN,IAAkBF,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeC,IAA7D;AACH;AACJ;;AACD,MAAII,cAAJ;AACAd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACQ,OAAL,EAAc;AACV;AACH;;AACDO,IAAAA,YAAY,CAACD,cAAD,CAAZ;AACAA,IAAAA,cAAc,GAAGE,UAAU,CAAC,YAAM;AAC9BT,MAAAA,YAAY,CAAC;AAAEU,QAAAA,IAAI,EAAEd;AAAR,OAAD,CAAZ;AACH,KAF0B,EAExB,IAFwB,CAA3B;AAGH,GARQ,EAQN,CAACK,OAAD,CARM,CAAT;AASA,SACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH","sourcesContent":["import React, { useEffect } from \"react\";\nimport User from '../../../utils/Stores/User';\nimport Error from '../../Error';\n\nconst { CLEAR_USER_ERROR } = User.actions;\n\nexport default function () {\n    const [{ error }, userDispatch] = User.useContext();\n    let message = null;\n    if (error) {\n        if (error.response\n            && error.response.data\n            && error.response.data.errors\n            && error.response.data.errors[0]\n            && error.response.data.errors[0].message) {\n            message = error.response.data.errors[0].message;\n        }\n        else if (error.request && error.request.status === 401) {\n            message = \"Incorrect email or password\";\n        } else {\n            message = error.message || (error.response && error.response.data);\n        }\n    }\n    let messageTimeout;\n    useEffect(() => {\n        if (!message) {\n            return;\n        }\n        clearTimeout(messageTimeout);\n        messageTimeout = setTimeout(() => {\n            userDispatch({ type: CLEAR_USER_ERROR })\n        }, 5500)\n    }, [message])\n    return (\n        <Error message={message} />\n    )\n}"]},"metadata":{},"sourceType":"module"}