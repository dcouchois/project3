{"ast":null,"code":"import _slicedToArray from \"/Users/deannaguzman/Documents/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/deannaguzman/Documents/project3/client/src/components/Drum/Drum.js\";\nimport React, { useEffect } from \"react\";\nimport \"./style.css\";\n\nfunction useKeyPress(targetKey) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyPressed = _useState2[0],\n      setKeyPressed = _useState2[1];\n\n  function downHandler(_ref) {\n    var key = _ref.key;\n\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  var upHandler = function upHandler(_ref2) {\n    var key = _ref2.key;\n\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler); // Remove event listeners on cleanup\n\n    return function () {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, []); // const handleKeydown = event => {\n  //     if (e.keycode === this.props.letter.charCodeAt()) {\n  //         this.audio.play()\n  //         this.audio.currentTime = 0\n  //         this.props.handleDisplay(this.props.id)\n  //     }\n  // }  \n\n  useEffect(function () {\n    window.addEventListener(\"keydown\", handleKeydown);\n    return function () {\n      window.removeEventListener(\"keydown\", handleKeydown);\n    };\n  }, []);\n  return keyPressed;\n}\n\nfunction DrumMachine() {\n  var _this = this;\n\n  this.handleClick = function () {\n    _this.audio.play();\n\n    _this.audio.currentTime = 0;\n\n    _this.props.handleDisplay(_this.props.id);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"drum-machine\",\n    id: this.props.id,\n    onClick: this.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, this.props.letter), React.createElement(\"audio\", {\n    ref: function ref(_ref3) {\n      return _this.audio = _ref3;\n    },\n    className: \"clip\",\n    src: this.props.src,\n    id: this.props.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}\n\n;\nexport default DrumMachine;","map":{"version":3,"sources":["/Users/deannaguzman/Documents/project3/client/src/components/Drum/Drum.js"],"names":["React","useEffect","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","handleKeydown","DrumMachine","handleClick","audio","play","currentTime","props","handleDisplay","id","letter","ref","src"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;AAGA,SAASC,WAAT,CAAqBC,SAArB,EAA+B;AAAA,kBACUC,QAAQ,CAAE,KAAF,CADlB;AAAA;AAAA,MACpBC,UADoB;AAAA,MACRC,aADQ;;AAG3B,WAASC,WAAT,OAA8B;AAAA,QAAPC,GAAO,QAAPA,GAAO;;AAC1B,QAAIA,GAAG,KAAKL,SAAZ,EAAuB;AACrBG,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF;;AAED,MAAMG,SAAS,GAAG,SAAZA,SAAY,QAAa;AAAA,QAAVD,GAAU,SAAVA,GAAU;;AAC7B,QAAIA,GAAG,KAAKL,SAAZ,EAAuB;AACrBG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAJD;;AAMAL,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,WAAnC;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,SAAjC,EAFc,CAGd;;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,WAAtC;AACAG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,SAApC;AACD,KAHD;AAID,GARQ,EAQN,EARM,CAAT,CAfyB,CA0B3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCE,aAAnC;AACA,WAAO,YAAM;AACXH,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCC,aAAtC;AACD,KAFD;AAGD,GALM,EAKJ,EALI,CAAT;AAOE,SAAOR,UAAP;AACL;;AAGD,SAASS,WAAT,GAAwB;AAAA;;AAEpB,OAAKC,WAAL,GAAmB,YAAM;AACrB,IAAA,KAAI,CAACC,KAAL,CAAWC,IAAX;;AACA,IAAA,KAAI,CAACD,KAAL,CAAWE,WAAX,GAAyB,CAAzB;;AACA,IAAA,KAAI,CAACC,KAAL,CAAWC,aAAX,CAAyB,KAAI,CAACD,KAAL,CAAWE,EAApC;AACH,GAJD;;AAMI,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AACI,IAAA,EAAE,EAAE,KAAKF,KAAL,CAAWE,EADnB;AAEI,IAAA,OAAO,EAAE,KAAKN,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,KAAKI,KAAL,CAAWG,MAAhB,CAJJ,EAKI;AACI,IAAA,GAAG,EAAE,aAAAC,KAAG;AAAA,aAAI,KAAI,CAACP,KAAL,GAAaO,KAAjB;AAAA,KADZ;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWK,GAHpB;AAII,IAAA,EAAE,EAAE,KAAKL,KAAL,CAAWG,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAcP;;AAAA;AAED,eAAeR,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./style.css\";\n\n\nfunction useKeyPress(targetKey){\n    const [keyPressed, setKeyPressed ] = useState (false)\n    \n    function downHandler({ key }) {\n        if (key === targetKey) {\n          setKeyPressed(true);\n        }\n      }\n    \n      const upHandler = ({ key }) => {\n        if (key === targetKey) {\n          setKeyPressed(false);\n        }\n      };\n    \n      useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        window.addEventListener('keyup', upHandler);\n        // Remove event listeners on cleanup\n        return () => {\n          window.removeEventListener('keydown', downHandler);\n          window.removeEventListener('keyup', upHandler);\n        };\n      }, []);\n      \n    \n    // const handleKeydown = event => {\n    //     if (e.keycode === this.props.letter.charCodeAt()) {\n    //         this.audio.play()\n    //         this.audio.currentTime = 0\n    //         this.props.handleDisplay(this.props.id)\n    //     }\n    // }  \n    \n    useEffect(() => {\n        window.addEventListener(\"keydown\", handleKeydown)\n        return () => {\n          window.removeEventListener(\"keydown\", handleKeydown)\n        } \n      }, [])\n   \n      return keyPressed;\n}\n\n\nfunction DrumMachine () {\n\n    this.handleClick = () => {\n        this.audio.play()\n        this.audio.currentTime = 0\n        this.props.handleDisplay(this.props.id)\n    }\n\n        return (\n            <div className=\"drum-machine\"\n                id={this.props.id}\n                onClick={this.handleClick}\n            >\n                <h4>{this.props.letter}</h4>\n                <audio\n                    ref={ref => this.audio = ref}\n                    className=\"clip\"\n                    src={this.props.src}\n                    id={this.props.letter}>\n                </audio>\n            </div>\n        )\n};\n\nexport default DrumMachine;\n\n"]},"metadata":{},"sourceType":"module"}