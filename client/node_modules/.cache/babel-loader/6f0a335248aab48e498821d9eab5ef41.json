{"ast":null,"code":"import _objectSpread from \"/Users/deannaguzman/Documents/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/deannaguzman/Documents/project3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/deannaguzman/Documents/project3/client/src/components/Drum/Drum.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\n\nfunction useKeyPress(keyInfo) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyPressed = _useState2[0],\n      setKeyPressed = _useState2[1];\n\n  function downHandler(_ref) {\n    var key = _ref.key;\n    console.log(key, keyInfo.letter);\n\n    if (key === keyInfo.letter) {\n      setKeyPressed(true);\n      this.audio.play();\n      this.audio.currentTime = 0;\n      this.props.handleDisplay(keyInfo.id);\n    }\n  } //   const upHandler = ({ key }) => {\n  //     if (key === keyInfo.letter) {\n  //       setKeyPressed(false);\n  //     }\n  //   };\n\n\n  useEffect(function () {\n    window.addEventListener('keydown', downHandler); // window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n\n    return function () {\n      window.removeEventListener('keydown', downHandler); //   window.removeEventListener('keyup', upHandler);\n    };\n  }, []); // const handleKeydown = event => {\n  //     if (e.keycode === this.props.letter.charCodeAt()) {\n  //         this.audio.play()\n  //         this.audio.currentTime = 0\n  //         this.props.handleDisplay(this.props.id)\n  //     }\n  // }  \n  // useEffect(() => {\n  //     window.addEventListener(\"keydown\", handleKeydown)\n  //     return () => {\n  //       window.removeEventListener(\"keydown\", handleKeydown)\n  //     } \n  //   }, [])\n\n  return keyPressed;\n}\n\nfunction DrumMachine(props) {\n  var _this = this;\n\n  useKeyPress(_objectSpread({}, props, {\n    audio: this.audio\n  }));\n\n  this.handleClick = function () {\n    _this.audio.play();\n\n    _this.audio.currentTime = 0;\n\n    _this.props.handleDisplay(_this.props.id);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"drum-machine\",\n    id: this.props.id,\n    onClick: this.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, this.props.letter), React.createElement(\"audio\", {\n    ref: function ref(_ref2) {\n      return _this.audio = _ref2;\n    },\n    className: \"clip\",\n    src: this.props.src,\n    id: this.props.letter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n}\n\n;\nexport default DrumMachine;","map":{"version":3,"sources":["/Users/deannaguzman/Documents/project3/client/src/components/Drum/Drum.js"],"names":["React","useEffect","useState","useKeyPress","keyInfo","keyPressed","setKeyPressed","downHandler","key","console","log","letter","audio","play","currentTime","props","handleDisplay","id","window","addEventListener","removeEventListener","DrumMachine","handleClick","ref","src"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;;AAGA,SAASC,WAAT,CAAqBC,OAArB,EAA6B;AAAA,kBACYF,QAAQ,CAAE,KAAF,CADpB;AAAA;AAAA,MAClBG,UADkB;AAAA,MACNC,aADM;;AAGzB,WAASC,WAAT,OAA8B;AAAA,QAAPC,GAAO,QAAPA,GAAO;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiBJ,OAAO,CAACO,MAAzB;;AACA,QAAIH,GAAG,KAAKJ,OAAO,CAACO,MAApB,EAA4B;AAC1BL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,WAAKM,KAAL,CAAWC,IAAX;AACA,WAAKD,KAAL,CAAWE,WAAX,GAAyB,CAAzB;AACA,WAAKC,KAAL,CAAWC,aAAX,CAAyBZ,OAAO,CAACa,EAAjC;AACD;AACF,GAXsB,CAazB;AACA;AACA;AACA;AACA;;;AAEEhB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCZ,WAAnC,EADc,CAEd;AACA;;AACA,WAAO,YAAM;AACXW,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCb,WAAtC,EADW,CAEb;AACC,KAHD;AAID,GARQ,EAQN,EARM,CAAT,CAnBuB,CA8BzB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEE,SAAOF,UAAP;AACL;;AAGD,SAASgB,WAAT,CAAsBN,KAAtB,EAA6B;AAAA;;AACzBZ,EAAAA,WAAW,mBACJY,KADI;AAEPH,IAAAA,KAAK,EAAE,KAAKA;AAFL,KAAX;;AAIA,OAAKU,WAAL,GAAmB,YAAM;AACrB,IAAA,KAAI,CAACV,KAAL,CAAWC,IAAX;;AACA,IAAA,KAAI,CAACD,KAAL,CAAWE,WAAX,GAAyB,CAAzB;;AACA,IAAA,KAAI,CAACC,KAAL,CAAWC,aAAX,CAAyB,KAAI,CAACD,KAAL,CAAWE,EAApC;AACH,GAJD;;AAMI,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AACI,IAAA,EAAE,EAAE,KAAKF,KAAL,CAAWE,EADnB;AAEI,IAAA,OAAO,EAAE,KAAKK,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,KAAKP,KAAL,CAAWJ,MAAhB,CAJJ,EAKI;AACI,IAAA,GAAG,EAAE,aAAAY,KAAG;AAAA,aAAI,KAAI,CAACX,KAAL,GAAaW,KAAjB;AAAA,KADZ;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,GAAG,EAAE,KAAKR,KAAL,CAAWS,GAHpB;AAII,IAAA,EAAE,EAAE,KAAKT,KAAL,CAAWJ,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAcP;;AAAA;AAED,eAAeU,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\n\n\nfunction useKeyPress(keyInfo){\n    const [keyPressed, setKeyPressed ] = useState (false)\n    \n    function downHandler({ key }) {\n        console.log(key, keyInfo.letter);\n        if (key === keyInfo.letter) {\n          setKeyPressed(true);\n          this.audio.play()\n          this.audio.currentTime = 0\n          this.props.handleDisplay(keyInfo.id)\n        }\n      }\n    \n    //   const upHandler = ({ key }) => {\n    //     if (key === keyInfo.letter) {\n    //       setKeyPressed(false);\n    //     }\n    //   };\n    \n      useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        // window.addEventListener('keyup', upHandler);\n        // Remove event listeners on cleanup\n        return () => {\n          window.removeEventListener('keydown', downHandler);\n        //   window.removeEventListener('keyup', upHandler);\n        };\n      }, []);\n      \n    \n    // const handleKeydown = event => {\n    //     if (e.keycode === this.props.letter.charCodeAt()) {\n    //         this.audio.play()\n    //         this.audio.currentTime = 0\n    //         this.props.handleDisplay(this.props.id)\n    //     }\n    // }  \n    \n    // useEffect(() => {\n    //     window.addEventListener(\"keydown\", handleKeydown)\n    //     return () => {\n    //       window.removeEventListener(\"keydown\", handleKeydown)\n    //     } \n    //   }, [])\n   \n      return keyPressed;\n}\n\n\nfunction DrumMachine (props) {\n    useKeyPress({\n        ...props,\n        audio: this.audio\n    })\n    this.handleClick = () => {\n        this.audio.play()\n        this.audio.currentTime = 0\n        this.props.handleDisplay(this.props.id)\n    }\n\n        return (\n            <div className=\"drum-machine\"\n                id={this.props.id}\n                onClick={this.handleClick}\n            >\n                <h4>{this.props.letter}</h4>\n                <audio\n                    ref={ref => this.audio = ref}\n                    className=\"clip\"\n                    src={this.props.src}\n                    id={this.props.letter}>\n                </audio>\n            </div>\n        )\n};\n\nexport default DrumMachine;\n\n"]},"metadata":{},"sourceType":"module"}